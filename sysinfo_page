#!/bin/bash

# sysinfo_page - script that returns an HTML file with system information imbedded in it.

HEADING="System Information for $HOSTNAME"
RIGHT_NOW=$(date +"%x %r %z")
TIME_STAMP="Updated on $RIGHT_NOW by $USER"

system_info() {
	if ls /etc/*release 1>/dev/null 2>&1; then
		echo "<h2>System Release Info</h2>"
		echo "<pre>"
		for i in /etc/*release; do
			head -n 1 $i
		done
		uname -orp
		echo "</pre>"
	fi
}

show_uptime() {
	echo "<h2>System Uptime</h2>"
	echo "<pre>"
	uptime
	echo "</pre>"
}

drive_space() {
	echo "<h2>Filesystem Space</h2>"
	echo "<pre>"
	df
	echo "</pre>"

}

home_space() {
	echo "<h2>Home directory space by user</h2>"
	echo "<pre>"
	format="%8s%10s%10s %-s\n"
	printf "$format" "Dirs" "Files" "Blocks" "Directory"
	printf "$format" "----" "-----" "------" "---------"
	if [ $(id -u) = "0" ]; then
		dir_list="/home/*"
	else
		dir_list=$HOME
	fi
	for home_dir in $dir_list; do
		total_dirs=$(find $home_dir -type d | wc -l)
		total_files=$(find $home_dir -type f | wc -l)
		total_blocks=$(du -s $home_dir)
		printf "$format" $total_dirs $total_files $total_blocks
	done
	echo "</pre>"
}

write_page() {
cat <<- _EOF_
	<html>
	 <head>
	   <title> $HEADING </title>
	 </head>
	 
	 <body>
	   <h1> $HEADING </h1>
	   <p>$TIME_STAMP</p>
	   $(system_info)
	   $(show_uptime)
	   $(drive_space)
	   $(home_space)	
	 </body>
 	</html>
_EOF_
}

interactive=
filename=~/sysinfo_page.html

while [ "$1" != "" ]; do
    case $1 in
        -f | --file )           shift
                                filename=$1
                                ;;
        -i | --interactive )    interactive=1
                                ;;
        -h | --help )           usage
                                exit
                                ;;
        * )                     usage
                                exit 1
    esac
    shift
done


# Test code to verify command line processing

if [ "$interactive" = "1" ]; then
    response=

    echo -n "Enter name of output file [$filename] > "
    read response
    if [ -n "$response" ]; then
        filename=$response
    fi

    if [ -f $filename ]; then
        echo -n "Output file exists. Overwrite? (y/n) > "
        read response
        if [ "$response" != "y" ]; then
            echo "Exiting program."
            exit 1
        fi
    fi
else
	echo "interactive is off"
fi
echo "output file = $filename"

# Write page
write_page > $filename

